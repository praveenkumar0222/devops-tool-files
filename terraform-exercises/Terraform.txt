Terraform 0.13 and later:

Use:

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 3.0"
    }
  }
}
 
# Configure the AWS Provider
provider "aws" {
  region = "us-east-1"
  # VERSION IS NOT NEEDED HERE
}
Instead of:

provider "aws" {
  version = "~> 3.0"
  region  = "us-east-1"
}



Commands Executed in this Section
If you have any problems executing the commands executed in the section, you can refer back to this list.

The complete command list is also present in the Github repository.

https://github.com/in28minutes/devops-master-class/tree/master/terraform#commands-executed

Commands Executed

brew install terraform
terraform --version
terraform version
terraform init
export AWS_ACCESS_KEY_ID=*******
export AWS_SECRET_ACCESS_KEY=*********
terraform plan
terraform console
terraform apply -refresh=false
terraform plan -out iam.tfplan
terraform apply "iam.tfplan"
terraform apply -target=aws_iam_user.my_iam_user
terraform destroy
terraform validate
terraform fmt
terraform show
export TF_VAR_iam_user_name_prefix = FROM_ENV_VARIABLE_IAM_PREFIX
export TF_VAR_iam_user_name_prefix=FROM_ENV_VARIABLE_IAM_PREFIX
terraform plan -refresh=false -var="iam_user_name_prefix=VALUE_FROM_COMMAND_LINE"
terraform apply -target=aws_default_vpc.default
terraform apply -target=data.aws_subnet_ids.default_subnets
terraform apply -target=data.aws_ami_ids.aws_linux_2_latest_ids
terraform apply -target=data.aws_ami.aws_linux_2_latest
terraform workspace show
terraform workspace new prod-env
terraform workspace select default
terraform workspace list
terraform workspace select prod-env


Terraform Update: Enable S3 Versioning
Updated code for recent Terraform versions


resource "aws_s3_bucket" "my_s3_bucket" {
    bucket = "my-s3-bucket-in28minutes-rangak-002"
 #   versioning {
 #       enabled = true
 #   }
}
 
resource "aws_s3_bucket_versioning" "versioning_example" {
  bucket = aws_s3_bucket.my_s3_bucket.id
  versioning_configuration {
    status = "Enabled"
  }
}
Complete Code: https://github.com/in28minutes/devops-master-class/blob/master/terraform/backup/01-terraform-basics/main.tf


Terraform Update - Use double quotes around target
In the next lecture, we execute this command to update user details:

terraform apply -target=aws_iam_user.my_iam_user



This command needs to change based on recent updates. You need to use double quotes (target="aws_iam_user.my_iam_user") around target!

terraform apply -target="aws_iam_user.my_iam_user"




Terraform Update: Getting All Subnet Ids
Updated code for recent Terraform versions

# for_each  = data.aws_subnet_ids.default_subnets.ids
for_each  = toset(data.aws_subnets.default_subnets.ids)


Complete Code: https://github.com/in28minutes/devops-master-class/blob/master/terraform/backup/06-ec2-with-elb/main.tf



Terraform Update: Versioning and Encryption
Updated code for recent Terraform versions:


resource "aws_s3_bucket" "enterprise_backend_state" {
    bucket = "dev-applications-backend-state-in28minutes-abc"
 
    lifecycle {
        prevent_destroy = true
    }
 
#    versioning {
#        enabled = true
#    }
#
#    server_side_encryption_configuration {
#        rule {
#            apply_server_side_encryption_by_default {
#                sse_algorithm = "AES256"
#            }
#        }
#    }
 
}
 
resource "aws_s3_bucket_versioning" "versioning_example" {
  bucket = aws_s3_bucket.enterprise_backend_state.id
  versioning_configuration {
    status = "Enabled"
  }
}
 
resource "aws_s3_bucket_server_side_encryption_configuration" "example" {
  bucket = aws_s3_bucket.enterprise_backend_state.bucket
 
  rule {
    apply_server_side_encryption_by_default {
      sse_algorithm     = "AES256"
    }
  }
}
Complete Code: https://github.com/in28minutes/devops-master-class/blob/master/terraform/backup/07-backend-state/backend-state/main.tf

